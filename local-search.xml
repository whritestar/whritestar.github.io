<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>唯有美食不可辜负</title>
    <link href="/2020/06/07/%E7%94%9F%E6%B4%BB/%E7%BE%8E%E9%A3%9F%E7%AF%87/"/>
    <url>/2020/06/07/%E7%94%9F%E6%B4%BB/%E7%BE%8E%E9%A3%9F%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="烤箱开启篇！附蔓越莓饼干-amp-奥尔良烤翅食谱"><a href="#烤箱开启篇！附蔓越莓饼干-amp-奥尔良烤翅食谱" class="headerlink" title="烤箱开启篇！附蔓越莓饼干&amp;奥尔良烤翅食谱"></a>烤箱开启篇！附蔓越莓饼干&amp;奥尔良烤翅食谱</h1><h2 id="蔓越莓饼干"><a href="#蔓越莓饼干" class="headerlink" title="蔓越莓饼干"></a>蔓越莓饼干</h2><p>用料：</p><ul><li>◌ 面粉 180g（建议低筋粉，普通面粉也可）</li><li>◌ 鸡蛋 50g/1个</li><li>◌ 黄油 100g</li><li>◌ 糖粉 65g</li><li>◌ 蔓越莓 35g</li></ul><p>工具：烤箱、厨房秤、打蛋器、面粉筛</p><p>制作步骤：</p><ol><li><p>鸡蛋打散成液体，不需要分离蛋黄蛋清；</p></li><li><p>黄油软化，加入鸡蛋液、糖粉，用打蛋器打发至浅色（开始是黄色的），差不多打发到松软的感觉就好；</p></li><li><p>加入蔓越莓搅拌均匀（个人喜好，颗粒比较大的话建议可以先切碎些）</p></li><li><p>将面粉过筛加入其中，用手揉合均匀后，揉成条状或是按压成长方体（还挺考验技术的hhhh），如果有模具的话，也可以直接放进长方形的模具中塑形</p></li><li><p>面粉团此时是非常软的，一定要放入冰箱冷冻室冷藏硬了再取出切片，一般冷藏1h左右</p></li><li><p>切片后，把蔓越莓饼干平铺在烤盘上，记得铺一层油纸。饼干之间一定要留有空隙，防止烘烤时膨胀粘连。</p></li><li><p>烤箱上下管165度，先预热再放入烤箱中层，烤制15min即可取出</p></li><li><p>取出后，记得晾凉再吃，这样会更加酥脆</p></li></ol><h2 id="新奥尔良烤翅"><a href="#新奥尔良烤翅" class="headerlink" title="新奥尔良烤翅"></a>新奥尔良烤翅</h2><p>这个真的超级简单且好吃，在家实现KFC自由！</p><p>具体用料相对比较随意些，我就是凭感觉来的。唯一不方便的一点，就是需要提前腌制下鸡翅，最好是前一天晚上准备好，放冰箱里，第二天再烤。</p><p>用料：</p><ul><li>◌ 鸡翅 4个</li><li>◌ 奥尔良腌料 适量</li><li>◌ 水 适量</li><li>◌ 蜂蜜 适量</li></ul><p>工具：烤箱、刷子</p><p>制作步骤：</p><ol><li>鸡翅洗干净后，可以用刀在鸡皮背面，划几道口，腌料可以更加2入味；鸡皮那面可以用牙签多戳几个洞，这样也不影响美观</li><li>把鸡翅放进保鲜袋，里面加入适量的奥尔良腌料和水，比例：1:1；用手反复给鸡翅按摩，为了更加入味</li><li>腌制3-4h以上，比较建议放入冰箱腌制一晚上，第二天再取出<br>烤盘上可以放一层锡纸，再将鸡翅平铺在上面，要留有一定空隙哦</li><li>烤箱上下层200度预热，预热后，将烤盘放在中间层，烤20min左右</li><li>中间可以按下暂停，用刷子给烤翅的两面刷上一层蜂蜜，继续烤制</li><li>时间到就可以出炉摆盘，趁热食用了</li></ol><h2 id="花生小酥"><a href="#花生小酥" class="headerlink" title="花生小酥"></a>花生小酥</h2><p>用料：</p><ul><li>◌ 黄油 100g</li><li>◌ 低筋面粉 180g</li><li>◌ 糖粉 60g</li><li>◌ 鸡蛋 1个</li><li>◌ 食盐 2g</li><li>◌ 泡打粉 半汤匙</li><li>◌ 酒鬼花生 适量（也可以换为你喜欢的坚果）</li></ul><p>工具：烤箱、厨房秤、电动打蛋器、面粉筛、刷刀</p><p>制作步骤：</p><ol><li>鸡蛋打散成液体，不需要分离蛋黄蛋清；</li><li>黄油室温软化，也可以切成小块后热水浴加速软化，软化到手指戳一戳变软即可，不需要化为液体哦~</li><li>将糖粉加入软化好的黄油中，用打蛋器打至蓬松；</li><li>加入打散后的全蛋液，只需要加一半左右即可（另外一半留着后面上色用），用打蛋器再次搅拌至黄油呈蓬松羽毛状；</li><li>加入泡打粉、盐，低筋面粉过筛后加入搅拌好的黄油中，用刮刀混合均匀，直至刮刀干净且容器内没有干粉为止；</li><li>盖上保鲜膜，放冰箱冷藏室1h左右；</li><li>取出面团，取约8-10g左右的小团，用手搓圆略压扁，放在油纸上，面团之间留有一定空隙（烤时会膨胀的）；</li><li>烤箱上下管170度预热，在弄好的面团上，刷上一层全蛋液，将半颗花生按压在上面，再刷一层全蛋液；</li><li>放入烤箱，上下管170度，烤制25-30min左右即可取出，晾凉后再吃，非常酥脆哦</li></ol>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>美食</tag>
      
      <tag>烤箱</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown编辑器语法</title>
    <link href="/2020/06/06/CSDN-markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <url>/2020/06/06/CSDN-markdown%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用Markdown编辑器"><a href="#欢迎使用Markdown编辑器" class="headerlink" title="欢迎使用Markdown编辑器"></a>欢迎使用Markdown编辑器</h1><p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p><h2 id="新的改变"><a href="#新的改变" class="headerlink" title="新的改变"></a>新的改变</h2><p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p><ol><li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li><li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li><li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li><li>全新的 <strong>KaTeX数学公式</strong> 语法；</li><li>增加了支持<strong>甘特图的mermaid语法<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="mermaid语法说明"><a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">1</a></span></a></sup></strong> 功能；</li><li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li><li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li><li>增加了 <strong>检查列表</strong> 功能。</li></ol><h2 id="功能快捷键"><a href="#功能快捷键" class="headerlink" title="功能快捷键"></a>功能快捷键</h2><p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd><br>查找：<kbd>Ctrl/Command</kbd> + <kbd>F</kbd><br>替换：<kbd>Ctrl/Command</kbd> + <kbd>G</kbd></p><h2 id="合理的创建标题，有助于目录的生成"><a href="#合理的创建标题，有助于目录的生成" class="headerlink" title="合理的创建标题，有助于目录的生成"></a>合理的创建标题，有助于目录的生成</h2><p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p><h2 id="如何改变文本的样式"><a href="#如何改变文本的样式" class="headerlink" title="如何改变文本的样式"></a>如何改变文本的样式</h2><p><em>强调文本</em> <em>强调文本</em></p><p><strong>加粗文本</strong> <strong>加粗文本</strong></p><p>==标记文本==</p><p><del>删除文本</del></p><blockquote><p>引用文本</p></blockquote><p>H<del>2</del>O is是液体。</p><p>2^10^ 运算结果是 1024.</p><h2 id="插入链接与图片"><a href="#插入链接与图片" class="headerlink" title="插入链接与图片"></a>插入链接与图片</h2><p>链接: <a href="https://www.csdn.net/" target="_blank" rel="noopener">link</a>.</p><p>图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" srcset="/img/loading.gif" alt="Alt"></p><p>带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw" target="_blank" rel="noopener">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw</a> =30x30)</p><p>居中的图片: <img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" srcset="/img/loading.gif" alt="Alt"></p><p>居中并且带尺寸的图片: ![Alt](<a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center" target="_blank" rel="noopener">https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center</a> =30x30)</p><p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p><h2 id="如何插入一段漂亮的代码片"><a href="#如何插入一段漂亮的代码片" class="headerlink" title="如何插入一段漂亮的代码片"></a>如何插入一段漂亮的代码片</h2><p>去<a href="https://mp.csdn.net/console/configBlog" target="_blank" rel="noopener">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p><pre><code class="hljs javascript"><span class="hljs-comment">// An highlighted block</span><span class="hljs-keyword">var</span> foo = <span class="hljs-string">'bar'</span>;</code></pre><h2 id="生成一个适合你的列表"><a href="#生成一个适合你的列表" class="headerlink" title="生成一个适合你的列表"></a>生成一个适合你的列表</h2><ul><li>项目<ul><li>项目<ul><li>项目</li></ul></li></ul></li></ul><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><ul><li><input disabled="" type="checkbox"> 计划任务</li><li><input checked="" disabled="" type="checkbox"> 完成任务</li></ul><h2 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h2><p>一个简单的表格是这么创建的：<br>项目     | Value<br>——– | —–<br>电脑  | $1600<br>手机  | $12<br>导管  | $1</p><h3 id="设定内容居中、居左、居右"><a href="#设定内容居中、居左、居右" class="headerlink" title="设定内容居中、居左、居右"></a>设定内容居中、居左、居右</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右<br>| 第一列       | 第二列         | 第三列        |<br>|:———–:| ————-:|:————-|<br>| 第一列文本居中 | 第二列文本居右  | 第三列文本居左 |</p><h3 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：<br>|    TYPE   |ASCII                          |HTML<br>|—————-|——————————-|—————————–|<br>|Single backticks|<code>&#39;Isn&#39;t this fun?&#39;</code>            |’Isn’t this fun?’            |<br>|Quotes          |<code>&quot;Isn&#39;t this fun?&quot;</code>            |”Isn’t this fun?”            |<br>|Dashes          |<code>-- is en-dash, --- is em-dash</code>|– is en-dash, — is em-dash|</p><h2 id="创建一个自定义列表"><a href="#创建一个自定义列表" class="headerlink" title="创建一个自定义列表"></a>创建一个自定义列表</h2><dl><dt>Markdown</dt><dd>Text-to-HTML conversion tool</dd></dl><dl><dt>Authors<br>:  John</dt><dd>Luke</dd></dl><h2 id="如何创建一个注脚"><a href="#如何创建一个注脚" class="headerlink" title="如何创建一个注脚"></a>如何创建一个注脚</h2><p>一个具有注脚的文本。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="注脚的解释"><a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">2</a></span></a></sup></p><h2 id="注释也是必不可少的"><a href="#注释也是必不可少的" class="headerlink" title="注释也是必不可少的"></a>注释也是必不可少的</h2><p>Markdown将文本转换为 HTML。</p><p>*[HTML]:   超文本标记语言</p><h2 id="KaTeX数学公式"><a href="#KaTeX数学公式" class="headerlink" title="KaTeX数学公式"></a>KaTeX数学公式</h2><p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/" target="_blank" rel="noopener">KaTeX</a>:</p><p>Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall<br>n\in\mathbb N$ 是通过欧拉积分</p><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p><blockquote><p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">here</a>.</p></blockquote><h2 id="新的甘特图功能，丰富你的文章"><a href="#新的甘特图功能，丰富你的文章" class="headerlink" title="新的甘特图功能，丰富你的文章"></a>新的甘特图功能，丰富你的文章</h2><pre><code class="hljs mermaid">gantt        dateFormat  YYYY-MM-DD        title Adding GANTT diagram functionality to mermaid        section 现有任务        已完成               :done,    des1, 2014-01-06,2014-01-08        进行中               :active,  des2, 2014-01-09, 3d        计划一               :         des3, after des2, 5d        计划二               :         des4, after des3, 5d</code></pre><ul><li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">这儿</a>,</li></ul><h2 id="UML-图表"><a href="#UML-图表" class="headerlink" title="UML 图表"></a>UML 图表</h2><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">Mermaid</a>. 例如下面产生的一个序列图：</p><pre><code class="hljs mermaid">sequenceDiagram张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?李四--&gt;&gt;王五: 你最近怎么样，王五？李四--x 张三: 我很好，谢谢!李四-x 王五: 我很好，谢谢!Note right of 王五: 李四想了很长时间, 文字太长了&lt;br&#x2F;&gt;不适合放在一行.李四--&gt;&gt;张三: 打量着王五...张三-&gt;&gt;王五: 很好... 王五, 你怎么样?</code></pre><p>这将产生一个流程图。:</p><pre><code class="hljs mermaid">graph LRA[长方形] -- 链接 --&gt; B((圆))A --&gt; C(圆角长方形)B --&gt; D&#123;菱形&#125;C --&gt; D</code></pre><ul><li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">这儿</a>,</li></ul><h2 id="FLowchart流程图"><a href="#FLowchart流程图" class="headerlink" title="FLowchart流程图"></a>FLowchart流程图</h2><p>我们依旧会支持flowchart的流程图：</p><pre><code class="hljs mermaid">flowchatst&#x3D;&gt;start: 开始e&#x3D;&gt;end: 结束op&#x3D;&gt;operation: 我的操作cond&#x3D;&gt;condition: 确认？st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre><ul><li>关于 <strong>Flowchart流程图</strong> 语法，参考 [这儿][4].</li></ul><h2 id="导出与导入"><a href="#导出与导入" class="headerlink" title="导出与导入"></a>导出与导入</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br>继续你的创作。</p><p> [4]: <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">http://adrai.github.io/flowchart.js/</a><section class="footnotes"><hr><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">mermaid语法说明</a><br><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>注脚的解释<br><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section></p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github 博客搭建</title>
    <link href="/2020/06/06/Git-Hexo/"/>
    <url>/2020/06/06/Git-Hexo/</url>
    
    <content type="html"><![CDATA[<p>Hexo + Github 博客搭建教程详述</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ul><li>安装 Node.js: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li><li>​安装 Git:<br><a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">https://github.com/waylau/git-for-win</a></li><li>注册 Github账号: <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></li></ul><h2 id="Github-配置"><a href="#Github-配置" class="headerlink" title="Github 配置"></a>Github 配置</h2><ol><li>登录Github 账号: <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></li><li>创建仓库，点击右上角的 Create a new repository :<br><a href="https://github.com/new" target="_blank" rel="noopener">https://github.com/new</a></li><li>新建一个名为你的：“用户名.github.io”的仓库，比如说，如果我的github用户名是whritestar，那么你就新建whritestar.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是<br><a href="http://whritestar.github.io" target="_blank" rel="noopener">http://whritestar.github.io</a>（每一个<br>GitHub 账户最多只能创建一个这样可以直接使用域名访问的仓库）。<br><img src="https://img-blog.csdnimg.cn/20200606212724539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="创建"></li></ol><h5 id="添加秘钥-SSH-Key"><a href="#添加秘钥-SSH-Key" class="headerlink" title="添加秘钥 SSH Key"></a>添加秘钥 SSH Key</h5><p>仓库创建完成后，开始生成添加秘钥 SSH Key</p><p>​在终端 (Windows:cmd) 下输入：</p><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">"Github的注册邮箱地址"</span></code></pre><p>​一直Enter下来就可以，待秘钥生成完毕，会得到两 个文件id_rsa和id_rsa.pub，用文本编辑器打开id_rsa.pub，Ctrl + A复制里面的所有内容，然后进入<br><a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a> 把复制内容添加在这里</p><p>​测试是否添加成功。在Git Bash 命令行依次输入以下命令</p><pre><code class="hljs bash">ssh -T git@github.com</code></pre><p>如果出现提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到返回You’ve successfully authenticated即成功。</p><h1 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h1><h2 id="hexo是什么"><a href="#hexo是什么" class="headerlink" title="hexo是什么"></a>hexo是什么</h2><p>​Hexo是一个简单、快速、强大的基于 Github Pages 的博客框架，支持Markdown格式，有众多优秀插件和主题。</p><ul><li>​github:<br><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></li><li>​Hexo中文官网： <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></li><li>​Hexo官方使用文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></li></ul><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><h3 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h3><p>在git bush中输入以下命令：</p><pre><code class="hljs bash">npm install -g hexo</code></pre><h3 id="hexo-初始化"><a href="#hexo-初始化" class="headerlink" title="hexo 初始化"></a>hexo 初始化</h3><p>​在电脑的某个盘新建一个名为hexo的文件夹（名字可以随便取），比如我的是D:\Blogs\hexo，由于这个文件夹将来就作为你存放代码的地方，请你最好不要随便放。</p><pre><code class="hljs bash">1.定位到此文件夹<span class="hljs-built_in">cd</span> /d/Blogs/hexo/2.初始化hexo init</code></pre><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p><pre><code class="hljs sqf">├── <span class="hljs-variable">_config</span>.yml├── package.json├── scaffolds├── source|   ├── <span class="hljs-variable">_drafts</span>|   └── <span class="hljs-variable">_posts</span>└── themes</code></pre><h3 id="hexo-命令"><a href="#hexo-命令" class="headerlink" title="hexo 命令"></a>hexo 命令</h3><pre><code class="hljs bash"><span class="hljs-comment">#启动本地服务器</span>hexo generate</code></pre><pre><code class="hljs bash">hexo server<span class="hljs-comment">#在浏览器输入 http://localhost:4000/就可以看见网页和模板了</span>INFO  Start processingINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</code></pre><h1 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h1><p>直接使用hexo deploy部署到 Github</p><pre><code class="hljs bash">hexo deploy</code></pre><p>TP：出现如下错误：</p><pre><code class="hljs bash">ERROR Deployer not found:git</code></pre><p>这时候要使用下面的命令安装对应的插件</p><pre><code class="hljs bash">npm install hexo-deployer-git --save</code></pre><p>安装完成即可部署到Github</p><h1 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h1><h2 id="配置站点"><a href="#配置站点" class="headerlink" title="配置站点"></a>配置站点</h2><p>​ 🔺 打开根目录下站点配置文件_config.yml（比如我的是D:\Blogs\hexo_config.yml），配置有关deploy的部分：</p><pre><code class="hljs css"><span class="hljs-selector-tag">deploy</span>:  <span class="hljs-selector-tag">type</span>: <span class="hljs-selector-tag">git</span>  repo: https://github.com/whritestar/whritestar.github.io  <span class="hljs-selector-tag">branch</span>: <span class="hljs-selector-tag">master</span></code></pre><p>TP：修改的时候一定要注意:后面一定要有一个空格，否则会报错</p><p>​ 🔔 <strong>repo</strong> 为你的<strong>用户名.github.io</strong>的仓库地址</p><p>修改网站相关信息<br>​ 🔺 打开根目录下站点配置文件_config.yml（比如我的是D:\Workspaces\hexo_config.yml），修改网站信息</p><p>​ 🔔 修改的时候一定要注意:后面一定要有一个空格，否则会报错</p><p>title: 标题<br>subtitle: 副标题<br>description: 网页描述<br>author: 作者<br>language: 语言<br>​</p><h1 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h1><h2 id="选择合适的主题"><a href="#选择合适的主题" class="headerlink" title="选择合适的主题"></a>选择合适的主题</h2><ul><li>官方主题：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></li><li>例如：hexo-theme-star</li></ul><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><ol><li>点击合适的主题，将Github clone 地址复制</li><li>​在终端输入，等待下载<pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> `对应主题的Github地址`</code></pre><h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2>下载的主题文件都在 theme 目录下。<br>然后我们将 Hexo 根目录下的_config.yml 中的 theme: landscape 改为 theme:<br>star，然后重新执行 hexo g 来重新生成。</li></ol><p>注意：如果出现一些莫名其妙的问题，可以先执行</p><pre><code class="hljs bash">hexo clean</code></pre><h2 id="验证更新主题"><a href="#验证更新主题" class="headerlink" title="验证更新主题"></a>验证更新主题</h2><pre><code class="hljs bash">hexo clean   <span class="hljs-comment">#1.在本地清除缓存</span>hexo generate  <span class="hljs-comment">#2.在本地重新生成</span>hexo server  <span class="hljs-comment">#3.在本地预览主题</span></code></pre><h2 id="部署到-GitHub​"><a href="#部署到-GitHub​" class="headerlink" title="部署到 GitHub​"></a>部署到 GitHub​</h2><p>如果你一切都配置好了，接下来就是把博客部署到 GitHub 上：</p><pre><code class="hljs bash">hexo d</code></pre><h1 id="常用的-hexo-命令"><a href="#常用的-hexo-命令" class="headerlink" title="常用的 hexo 命令"></a>常用的 hexo 命令</h1><pre><code class="hljs bash">常见命令：hexo new <span class="hljs-string">"postName"</span>      <span class="hljs-comment"># 新建文章</span>hexo new page <span class="hljs-string">"pageName"</span> <span class="hljs-comment"># 新建页面</span>hexo generate            <span class="hljs-comment"># 生成静态页面至public目录</span>hexo server              <span class="hljs-comment"># 开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span>hexo deploy              <span class="hljs-comment"># 部署到GitHub</span>hexo <span class="hljs-built_in">help</span>                <span class="hljs-comment"># 查看帮助</span>hexo version             <span class="hljs-comment"># 查看Hexo的版本</span>缩写命令：hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy组合命令：hexo s -g   <span class="hljs-comment"># 生成并本地预览</span>hexo d -g   <span class="hljs-comment"># 生成并上传</span></code></pre><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>我们可以在 hexo 根目录下执行命令：</p><pre><code class="hljs bash">hexo new <span class="hljs-string">'my-first-blog'</span></code></pre><p>hexo 会帮我们在_posts 下生成相关 md 文件，我们只需要打开这个文件就可以开始写博客了，用这个命令的好处是帮我们自动生成了文章创建时间。</p><p>基本的建站步骤就介绍到这里了</p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github操作和git远程管理基本教程</title>
    <link href="/2020/06/06/Github/"/>
    <url>/2020/06/06/Github/</url>
    
    <content type="html"><![CDATA[<p>一个小白的github的开始<br>是从一个<a href="https://www.bilibili.com/video/BV1Xx411m7kn?p=8" target="_blank" rel="noopener">B站UP主</a>视频资源学习整理，方便日后查看。</p><h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol><li><p>什么是Git<br>Git是一个免费、开源的版本控制软件</p></li><li><p>什么是版本控制系统<br>版本控制是一种记录一个或若干个文件内容变化，以便将来查阅特定版本修订情况的系统。（记录文件的所有历史变化、随时可恢复到任何一个历史状态、多人协作开发或修改错误恢复）</p></li><li><p>什么是Github<br>Github是全球最大的社交编程及代码托管网站（<a href="https://github.com/）。" target="_blank" rel="noopener">https://github.com/）。</a><br>Github可以托管各种git库，并提供一个web界面（用户名.github.io/仓库名）</p></li><li><p>Github和Git是什么关系<br>Git是版本控制软件<br>Github是项目代码托管的平台，借助git来管理项目代码</p></li><li><p>为什么学习github<br>学习优秀的开源项目<br>关注行业前辈了解最新的行业动态<br>借助github托管项目代码</p></li></ol><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Github主页"><a href="#Github主页" class="headerlink" title="Github主页"></a>Github主页</h3><p><img src="https://img-blog.csdnimg.cn/20200606171837413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="主页"></p><h3 id="个人主页"><a href="#个人主页" class="headerlink" title="个人主页"></a>个人主页</h3><p><img src="https://img-blog.csdnimg.cn/20200606171426579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="个人主页"></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ol><li>仓库（<strong>Repository</strong>）<br>仓库用来存放项目代码，每个项目对应一个仓库，多个开源项目则有多个仓库</li><li>收藏（<strong>Star</strong>）<br>收藏项目，方便下次查看</li><li>复制克隆项目（<strong>Fork</strong>）<br>该fork的项目时独立存在的<br>复制过来自己用</li><li>发起请求（<strong>Pull Request</strong>）<br>你新增了功能，觉得不错，想和原本项目一起</li><li>关注（<strong>Watch</strong>）<br>关注项目，当项目更新可以接收到通知</li><li>事务卡片（<strong>Issue</strong>）<br>发现代码BUG，但是目前没有成型代码，需要讨论时用；</li></ol><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>一个git库（仓库）对应一个开源项目，通过git管理git库。</p><ol><li><p>创建仓库：<br><img src="https://img-blog.csdnimg.cn/20200606154947288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="创建仓库"></p></li><li><p>仓库主页详情说明<br><img src="https://img-blog.csdnimg.cn/20200606155016596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70#pic_center" srcset="/img/loading.gif" alt="主页"></p><h2 id="仓库管理"><a href="#仓库管理" class="headerlink" title="仓库管理"></a>仓库管理</h2></li><li><p>创建文件<br><img src="https://img-blog.csdnimg.cn/20200606155847958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="创建文件"><br><img src="https://img-blog.csdnimg.cn/20200606160928486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="文件名"><br><img src="https://img-blog.csdnimg.cn/20200606160109556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="概括"><br><img src="https://img-blog.csdnimg.cn/20200606160143416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="目的"></p></li><li><p>编辑文件<br><img src="https://img-blog.csdnimg.cn/20200606160218508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="编辑文件"><br><img src="https://img-blog.csdnimg.cn/20200606160244839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="修改/编辑"><br><img src="https://img-blog.csdnimg.cn/20200606160327338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="名字"><br><img src="https://img-blog.csdnimg.cn/20200606161030749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>删除操作<br>可在commits按钮查看删除信息</p></li><li><p>收缩仓库文件 使用快捷键t</p></li></ol><h2 id="Github-Isues"><a href="#Github-Isues" class="headerlink" title="Github Isues"></a>Github Isues</h2><p>作用：发现代码BUG，但是目前没有成型的代码，需要讨论时用；或者使用开源项目出现问题时使用。（其实就是一个交流的地方）</p><h1 id="Git安装与使用"><a href="#Git安装与使用" class="headerlink" title="Git安装与使用"></a>Git安装与使用</h1><p>目的：通过git 管理github托管项目代码</p><h2 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h2><p>下载安装地址：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a><br>安装适合自己电脑的版本。</p><h2 id="Git基本流程"><a href="#Git基本流程" class="headerlink" title="Git基本流程"></a>Git基本流程</h2><h3 id="Git工作区域"><a href="#Git工作区域" class="headerlink" title="Git工作区域"></a>Git工作区域</h3><p><img src="https://img-blog.csdnimg.cn/20200606160749139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="Git工作流程"><a href="#Git工作流程" class="headerlink" title="Git工作流程"></a>Git工作流程</h3><p>向仓库添加文件流程<br><img src="https://img-blog.csdnimg.cn/20200606173606865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="流程"></p><h3 id="Git初始化及仓库创建和操作"><a href="#Git初始化及仓库创建和操作" class="headerlink" title="Git初始化及仓库创建和操作"></a>Git初始化及仓库创建和操作</h3><h4 id="基本信息设置"><a href="#基本信息设置" class="headerlink" title="基本信息设置"></a>基本信息设置</h4><p>打开安装的 git，输入以下命令：</p><pre><code class="hljs bash">1.设置用户名git config --global user.name <span class="hljs-string">'用户名‘</span><span class="hljs-string"></span><span class="hljs-string">2.设置用户名邮箱</span><span class="hljs-string">git config --global user.email '</span>邮箱‘</code></pre><h4 id="初始化一个新的仓库"><a href="#初始化一个新的仓库" class="headerlink" title="初始化一个新的仓库"></a>初始化一个新的仓库</h4><ol><li><p>创建文件夹<br><img src="https://img-blog.csdnimg.cn/20200606175045284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>在文件内初始化git（创建git仓库）【此为本地工作区域文件】</p><pre><code class="hljs bash">1.创建一个名为<span class="hljs-built_in">test</span>的文件夹<span class="hljs-built_in">cd</span> <span class="hljs-built_in">test</span>2.创建隐藏文件.gitgit init</code></pre><p><img src="https://img-blog.csdnimg.cn/20200606175439199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>此文件存储仓库所有信息。</p></li><li><p>向仓库添加文件<img src="https://img-blog.csdnimg.cn/20200606180223999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="创建文件"><br><img src="https://img-blog.csdnimg.cn/20200606180343286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200606180458773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>修改仓库文<br>件<br><img src="https://img-blog.csdnimg.cn/20200606201554456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="修改"><br><img src="https://img-blog.csdnimg.cn/20200606201703703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200606201813183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p></li><li><p>删除文件<br><img src="https://img-blog.csdnimg.cn/20200606201902301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="Git管理远程仓库"><a href="#Git管理远程仓库" class="headerlink" title="Git管理远程仓库"></a>Git管理远程仓库</h2><p>目的：备份，实现代码共享集中化管理</p></li></ol><h3 id="本地同步远程仓库流程"><a href="#本地同步远程仓库流程" class="headerlink" title="本地同步远程仓库流程"></a>本地同步远程仓库流程</h3><p><img src="https://img-blog.csdnimg.cn/20200606202303525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="push"></p><h4 id="Git克隆本地操作"><a href="#Git克隆本地操作" class="headerlink" title="Git克隆本地操作"></a>Git克隆本地操作</h4><p>目的：将远程仓库（github对应的项目）复制到本地。</p><p>下载代码：</p><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> （仓库地址）项目链接</code></pre><h4 id="将本地仓库同步到git远程仓库中"><a href="#将本地仓库同步到git远程仓库中" class="headerlink" title="将本地仓库同步到git远程仓库中"></a>将本地仓库同步到git远程仓库中</h4><pre><code class="hljs bash">git push</code></pre><p><img src="https://img-blog.csdnimg.cn/20200606203425151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>TP：<br><img src="https://img-blog.csdnimg.cn/20200606204536818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dkc2h1bg==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前言</title>
    <link href="/2020/06/04/%E4%BD%A0%E5%A5%BD/"/>
    <url>/2020/06/04/%E4%BD%A0%E5%A5%BD/</url>
    
    <content type="html"><![CDATA[<p>前言<br>整个操作过程是在Windows 10下进行的，在Windows其他系统上操作应该差不多。<br>本文只是进行了一些基础配置，一些我没用上的功能就没有写。<br>主要作为自己搭建Hexo博客的入门总结，也希望能帮到别人。<br>如有错误之处还请指出，我毕竟也只是小白。</p>]]></content>
    
    
    <categories>
      
      <category>产品运营</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运营</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Welcom Wang’blog</title>
    <link href="/2020/06/01/%E7%94%9F%E6%B4%BB/hello-world/"/>
    <url>/2020/06/01/%E7%94%9F%E6%B4%BB/hello-world/</url>
    
    <content type="html"><![CDATA[<p>很高兴能够学习会新的一项技能，搭建了自己的博客，其实明明有很多平台都可以写东西，不知道自己为什么还要折腾这个博客，重新开始书写自己的点滴。<br>可能觉得其他产品没办法满足自己的状态，比如分类，因为会写各种东西，生活、工作、兴趣，闲言碎语等，而其他平台的产品没办法做大这样，大多都是专一领域。<br>其实这里也是主要记录一些平时的只言片语的内容，希望慢慢能够慢慢整理，可以管理我的知识。<br>像其他博主一样，通过积累能够把自己的知识整理，分类起来。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>感悟</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
